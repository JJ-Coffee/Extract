name: Extract Payload.bin, Boot.img, and Vbmeta.img

on:
  workflow_dispatch:
    inputs:
      branches:
        -main
      rom_url:
        description: 'URL to the stock ROM .zip file'
        required: true
        type: string

jobs:
  extract-files:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python Dependencies
      run: |
        pip install -r requirements.txt


    - name: Download Stock ROM
      run: |
        echo "Downloading stock ROM from ${GITHUB_EVENT_INPUTS_ROM_URL}"
        wget -O stock_rom.zip "${{ github.event.inputs.rom_url }}"

    - name: Extract Stock ROM
      run: |
        mkdir extracted_rom
        unzip stock_rom.zip -d extracted_rom
        rm -rf stock_rom.zip

    - name: Extract Payload.bin
      run: |
        # Use payload-dumper-go to extract payload.bin
        mkdir output
        payload-dumper-go extracted_rom/payload.bin /output
        ls -lah output

    - name: Extract boot.img and vbmeta.img
      run: |
        # Search for boot.img and vbmeta.img in the extracted ROM directory
        find output -name "boot.img" -exec cp {} ./ \;
        #find extracted_rom -name "vbmeta.img" -exec cp {} ./ \;

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: extracted-files
        path: |
          boot.img
          
